package com.aaa.greendaotest.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.aaa.greendaotest.info2db.entity.Student2;
import com.aaa.greendaotest.info2db.entity.Teacher2;
import com.aaa.greendaotest.infodb.entity.Student;
import com.aaa.greendaotest.infodb.entity.Teacher;

import com.aaa.greendaotest.greendao.Student2Dao;
import com.aaa.greendaotest.greendao.Teacher2Dao;
import com.aaa.greendaotest.greendao.StudentDao;
import com.aaa.greendaotest.greendao.TeacherDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig student2DaoConfig;
    private final DaoConfig teacher2DaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig teacherDaoConfig;

    private final Student2Dao student2Dao;
    private final Teacher2Dao teacher2Dao;
    private final StudentDao studentDao;
    private final TeacherDao teacherDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        student2DaoConfig = daoConfigMap.get(Student2Dao.class).clone();
        student2DaoConfig.initIdentityScope(type);

        teacher2DaoConfig = daoConfigMap.get(Teacher2Dao.class).clone();
        teacher2DaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        teacherDaoConfig = daoConfigMap.get(TeacherDao.class).clone();
        teacherDaoConfig.initIdentityScope(type);

        student2Dao = new Student2Dao(student2DaoConfig, this);
        teacher2Dao = new Teacher2Dao(teacher2DaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        teacherDao = new TeacherDao(teacherDaoConfig, this);

        registerDao(Student2.class, student2Dao);
        registerDao(Teacher2.class, teacher2Dao);
        registerDao(Student.class, studentDao);
        registerDao(Teacher.class, teacherDao);
    }
    
    public void clear() {
        student2DaoConfig.clearIdentityScope();
        teacher2DaoConfig.clearIdentityScope();
        studentDaoConfig.clearIdentityScope();
        teacherDaoConfig.clearIdentityScope();
    }

    public Student2Dao getStudent2Dao() {
        return student2Dao;
    }

    public Teacher2Dao getTeacher2Dao() {
        return teacher2Dao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public TeacherDao getTeacherDao() {
        return teacherDao;
    }

}
